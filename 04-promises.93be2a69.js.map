{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAcC,SAASC,cAAc,UACrCC,EAAOF,SAASC,cAAc,QAC9BE,EAAYH,SAASC,cAAc,uBACnCG,EAAOJ,SAASC,cAAc,sBAC9BI,EAASL,SAASC,cAAc,wBAEhCK,EAAgB,EAACC,SAAEA,EAAQC,MAAEA,MACjC,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,GACT,EA6BJN,EAAKc,iBAAiB,UA1BCC,IACrBA,EAAMC,iBACNnB,EAAYoB,UAAW,EACvB,MAAMC,EAAQC,SAASlB,EAAUmB,OAC3BC,EAAYF,SAASjB,EAAKkB,OAC1BE,EAAiBH,SAAShB,EAAOiB,OAEjCG,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAgBE,IAClCD,EAASE,KACPrB,EAAc,CAAEC,SAAUmB,EAAI,EAAGlB,MAAOY,EAAQM,EAAIH,IACjDK,MAAKN,IACJzB,EAAAgC,OAAOC,QACL,uBAAqBR,EAAIf,eAAmBe,EAAEd,UAAc,IAG/DuB,OAAMC,IACLnC,EAAAgC,OAAOI,QACL,sBAAoBD,EAAEzB,eAAmByB,EAAExB,UAAc,KAKnEI,QAAQsB,WAAWT,GAAUG,MAAK,IAAO7B,EAAYoB,UAAW,GAAO","sources":["src/js/04-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst btnPromises = document.querySelector('button');\nconst form = document.querySelector('form');\nconst delayTime = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nconst createPromise = ({ position, delay }) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst createPromises = event => {\n  event.preventDefault();\n  btnPromises.disabled = true;\n  const DELAY = parseInt(delayTime.value);\n  const DELAYSTEP = parseInt(step.value);\n  const promisesAmount = parseInt(amount.value);\n\n  const promises = [];\n  for (let i = 0; i < promisesAmount; i++) {\n    promises.push(\n      createPromise({ position: i + 1, delay: DELAY + i * DELAYSTEP })\n        .then(value => {\n          Notify.success(\n            `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n          );\n        })\n        .catch(error => {\n          Notify.failure(\n            `❌ Rejected promise ${error.position} in ${error.delay}ms`\n          );\n        })\n    );\n  }\n  Promise.allSettled(promises).then(() => (btnPromises.disabled = false));\n};\n\nform.addEventListener('submit', createPromises);\n"],"names":["$iQIUW","parcelRequire","$7b44b1a619d9acb5$var$btnPromises","document","querySelector","$7b44b1a619d9acb5$var$form","$7b44b1a619d9acb5$var$delayTime","$7b44b1a619d9acb5$var$step","$7b44b1a619d9acb5$var$amount","$7b44b1a619d9acb5$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","disabled","DELAY","parseInt","value","DELAYSTEP","promisesAmount","promises","i","push","then","Notify","success","catch","error","failure","allSettled"],"version":3,"file":"04-promises.93be2a69.js.map"}