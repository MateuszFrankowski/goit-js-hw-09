{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,QAC9BC,EAAYF,SAASC,cAAc,uBACnCE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAChCI,EAAgB,SAACC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,KAqBPR,EAAKiB,iBAAiB,UAjBC,SAAAC,GACrBA,EAAMC,iBAIN,IAHA,IAAIX,EAAQL,EAAUiB,MAChBC,EAAYjB,EAAKgB,MACjBE,EAAiBjB,EAAOe,MACrBG,EAAI,EAAGA,EAAID,EAAgBC,IAClChB,SAAWgB,EAAI,EACfjB,EAAcC,SAAUC,GACrBgB,MAAK,SAAAJ,GACJtB,EAAA2B,OAAOC,QAAQN,E,IAEhBO,OAAM,SAAAC,GACL9B,EAAA2B,OAAOI,QAAQD,E,IAEnBpB,GAAgBa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n// Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\nconst form = document.querySelector('form');\nconst delayTime = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nconst createPromises = event => {\n  event.preventDefault();\n  let delay = delayTime.value;\n  const delayStep = step.value;\n  const promisesAmount = amount.value;\n  for (let i = 0; i < promisesAmount; i++) {\n    position = i + 1;\n    createPromise(position, delay)\n      .then(value => {\n        Notify.success(value);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n    delay = delay + delayStep;\n  }\n};\nform.addEventListener('submit', createPromises);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayTime","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","event","preventDefault","value","delayStep","promisesAmount","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.e7aafb83.js.map"}