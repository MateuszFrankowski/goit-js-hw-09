{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAYF,SAASC,cAAc,uBACnCE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAyCtCF,EAAKM,iBAAiB,UAzBCC,IACrBA,EAAMC,iBACN,IAAIC,EAAcN,EAAUO,MACxBC,EAAQC,SAASH,GACrB,MAAMI,EAAYT,EAAKM,MACjBI,EAAiBT,EAAOK,MAE9B,IAAIK,EAAW,EACS,IAAAC,EAvBJ,EAACD,EAAUC,KAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFO,QAAQC,IAAI,UAAWV,EAAUC,GACjCK,EAAQ,uBAAqBN,QAAiBC,SAE9CQ,QAAQC,IAAI,SAAUV,EAAUC,GAChCM,EAAO,sBAAoBP,QAAeC,O,GAE3CA,EAAM,GACT,EAYAU,CAAcX,IADQC,EAcRL,GAZXgB,MAAKjB,IACJZ,EAAA8B,OAAOC,QAAQnB,EAAM,IAEtBoB,OAAMC,IACLjC,EAAA8B,OAAOI,QAAQD,EAAM,IAEtBE,SAAQ,KACPT,QAAQC,IAAIV,EAAUC,GACfD,GAAYD,EACfoB,EAAErB,GACFW,QAAQC,IAAI,YAEA","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nconst delayTime = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        console.log('resolve', position, delay);\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        console.log('reject', position, delay);\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nconst createPromises = event => {\n  event.preventDefault();\n  let delayString = delayTime.value;\n  let delay = parseInt(delayString);\n  const delayStep = step.value;\n  const promisesAmount = amount.value;\n\n  let position = 1;\n  const promisesHandler = delay =>\n    createPromise(position++, delay)\n      .then(value => {\n        Notify.success(value);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      })\n      .finally(() => {\n        console.log(position, delay);\n        return position <= promisesAmount\n          ? x(delayStep)\n          : console.log('finish');\n      });\n  promisesHandler(delay);\n};\n\nform.addEventListener('submit', createPromises);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayTime","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","event","preventDefault","delayString","value","delay1","parseInt","delayStep","promisesAmount","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","error","failure","finally","x"],"version":3,"file":"03-promises.d28048a0.js.map"}