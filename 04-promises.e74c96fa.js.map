{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAcC,SAASC,cAAc,UACrCC,EAAOF,SAASC,cAAc,QAC9BE,EAAYH,SAASC,cAAc,uBACnCG,EAAOJ,SAASC,cAAc,sBAC9BI,EAASL,SAASC,cAAc,wBAEhCK,EAAgB,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAC3BC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KA8BPP,EAAKe,iBAAiB,UA1BC,SAAAC,GACrBA,EAAMC,iBACNpB,EAAYqB,UAAW,EAMvB,IALA,IAAMC,EAAQC,SAASnB,EAAUoB,OAC3BC,EAAYF,SAASlB,EAAKmB,OAC1BE,EAAiBH,SAASjB,EAAOkB,OAEjCG,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAgBE,IAClCD,EAASE,KACPtB,EAAc,CAAEE,SAAUmB,EAAI,EAAGlB,MAAOY,EAAQM,EAAIH,IACjDK,MAAK,SAAAN,GACJ1B,EAAAiC,OAAOC,QACL,uBAA8CC,OAArBT,EAAMf,SAAS,QAAkBwB,OAAZT,EAAMd,MAAM,M,IAG7DwB,OAAM,SAAAC,GACLrC,EAAAiC,OAAOK,QACL,sBAA2CH,OAArBE,EAAM1B,SAAS,QAAkBwB,OAAZE,EAAMzB,MAAM,M,KAKjEI,QAAQuB,WAAWV,GAAUG,MAAK,W,OAAO9B,EAAYqB,UAAW,C","sources":["src/js/04-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst btnPromises = document.querySelector('button');\nconst form = document.querySelector('form');\nconst delayTime = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nconst createPromise = ({ position, delay }) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst createPromises = event => {\n  event.preventDefault();\n  btnPromises.disabled = true;\n  const DELAY = parseInt(delayTime.value);\n  const DELAYSTEP = parseInt(step.value);\n  const promisesAmount = parseInt(amount.value);\n\n  const promises = [];\n  for (let i = 0; i < promisesAmount; i++) {\n    promises.push(\n      createPromise({ position: i + 1, delay: DELAY + i * DELAYSTEP })\n        .then(value => {\n          Notify.success(\n            `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n          );\n        })\n        .catch(error => {\n          Notify.failure(\n            `❌ Rejected promise ${error.position} in ${error.delay}ms`\n          );\n        })\n    );\n  }\n  Promise.allSettled(promises).then(() => (btnPromises.disabled = false));\n};\n\nform.addEventListener('submit', createPromises);\n"],"names":["$h6c0i","parcelRequire","$2a48deccb4570335$var$btnPromises","document","querySelector","$2a48deccb4570335$var$form","$2a48deccb4570335$var$delayTime","$2a48deccb4570335$var$step","$2a48deccb4570335$var$amount","$2a48deccb4570335$var$createPromise","param","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","disabled","DELAY","parseInt","value","DELAYSTEP","promisesAmount","promises","i","push","then","Notify","success","concat","catch","error","failure","allSettled"],"version":3,"file":"04-promises.e74c96fa.js.map"}